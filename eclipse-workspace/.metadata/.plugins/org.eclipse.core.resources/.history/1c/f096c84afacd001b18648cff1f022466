package hopenihai;


import java.util.Collections;

import java.util.Scanner;
import java.util.Vector;

public class Coktansecmelisoru extends Soru implements Comparable<Coktansecmelisoru>
{

	public Vector<Coktansecmelisoru> cssorular = new Vector<>();
	protected int puani;
	protected String siklari;
	protected String dogrusikki;
	protected int zorlugu;
	protected String metni;

	public Coktansecmelisoru(String metni, String siklari, String dogrusikki, int zorlugu, int puani) {
		this.metni = metni;
		this.siklari = siklari;
		this.dogrusikki = dogrusikki;
		this.zorlugu = zorlugu;
		this.puani = puani;

	}

	public int getPuani() {
		return puani;
	}

	public void setPuani(int puani) {
		this.puani = puani;
	}

	public String getSiklari() {
		return siklari;
	}

	public void setSiklari(String siklari) {
		this.siklari = siklari;
	}

	public String getDogrusikki() {
		return dogrusikki;
	}

	public void setDogrusikki(String dogrusikki) {
		this.dogrusikki = dogrusikki;
	}

	public int getZorlugu() {
		return zorlugu;
	}

	public void setZorlugu(int zorlugu) {
		this.zorlugu = zorlugu;
	}

	public String getMetni() {
		return metni;
	}

	public void setMetni(String metni) {
		this.metni = metni;
	}

	@Override
	protected void soruEkle() {

		System.out.println("kac test sorusu gireceksin?");
		Scanner kl3 = new Scanner(System.in);
		int kac = kl3.nextInt();
		for (int i = 0; i < kac; i++) {
			
			System.out.println("sýrasýyla metin sýk dogrusýk zorluk(kolay için 0 orta için 1 zor için 2 girin) ve puan girin");
			Scanner kl2 = new Scanner(System.in);
			String metin = kl2.nextLine();
			String siklar = kl2.nextLine();
			String dogrusik = kl2.nextLine();
			int zorluk = kl2.nextInt();
			int puan = kl2.nextInt();
			cssorular.add(new Coktansecmelisoru(metin, siklar, dogrusik, zorluk, puan));
		}

	}

	@Override
	protected void soruSil() {
		int i;
		System.out.println("silmek istediðiniz soruda geçen kelimeyi giriniz");
		Scanner klavye5 = new Scanner(System.in);
		String girilen5 = klavye5.nextLine();
		for (i = 0; i < cssorular.size(); i++) {
			Boolean b = cssorular.get(i).getMetni().contains(girilen5);
			if (b == true) {
				System.out.println(cssorular.get(i)
						+ "\tbunu sileyim mi?cevabýn evetse 1 e bas yoksa baska bir tuþa basabilirsin");
				Scanner klavye6 = new Scanner(System.in);
				int c = klavye6.nextInt();
				if (c == 1)
					cssorular.set(i, null);
				else
					continue;
			}

		}

	}

	@Override
	protected void soruSýrala() {

		System.out.println("icinde hangi kelimenin gectiði sorularý listeleyelim"); // soru metnine gore
		Scanner klavye = new Scanner(System.in);
		String kelime = klavye.nextLine();
		for (int i = 0; i < cssorular.size(); i++) {
			Boolean b = cssorular.get(i).getMetni().contains(kelime);
			if (b == true) {
				Collections.sort(cssorular);
				for (Coktansecmelisoru deger : cssorular) {

				}
				System.out.println(cssorular.get(i));
			}
		}

		System.out.println("cevabý hangi þýk olan sorularý listeleyelim listeleyeyim");// dogrusikka gore
		Scanner kl1 = new Scanner(System.in);
		String sikki = kl1.nextLine();
		for (int i = 0; i < cssorular.size(); i++) {
			if (sikki.equalsIgnoreCase(cssorular.get(i).getDogrusikki())) {
				Collections.sort(cssorular);
				for (Coktansecmelisoru deger : cssorular) {

				}
				System.out.println(cssorular.get(i));
			}
		}
		System.out.println("puaný kac olan sorularý listeleyelim sorularý listeleyelim listeleyeyim");// puana göre
		Scanner kl2 = new Scanner(System.in);
		int puani = kl2.nextInt();
		for (int i = 0; i < cssorular.size(); i++) {
			if (puani == cssorular.get(i).getPuani()) {
				Collections.sort(cssorular);
				for (Coktansecmelisoru deger : cssorular) {

				}
				System.out.println(cssorular.get(i));
			}
		}
		System.out.println(" sýklarýnda hangi kelimenin gectiði sorularý listeleyelim ");// siktakelime arama
		Scanner kl3 = new Scanner(System.in);
		String kelime2 = kl3.nextLine();
		for (int i = 0; i < cssorular.size(); i++) {
			Boolean a = cssorular.get(i).getSiklari().contains(kelime);

			if (a == true) {

				Collections.sort(cssorular);
				for (Coktansecmelisoru deger : cssorular) {

				}
				System.out.println(cssorular.get(i));
			}
		}

		System.out.println("zorluk derecesi kaç olan sorularý listeleyeyim");// zorluga göre
		Scanner kl5 = new Scanner(System.in);
		int zorluk = kl5.nextInt();
		for (int i = 0; i < cssorular.size(); i++) {
			if (zorluk == cssorular.get(i).getZorlugu()) {
				Collections.sort(cssorular);
				for (Coktansecmelisoru deger : cssorular) {

				}
				System.out.println(cssorular.get(i));
			}
		}
	}

	@Override
	public int compareTo(Coktansecmelisoru o) {
		if (this.puani > o.puani)
			return 1;
		if (this.puani < o.puani)
			return -1;
		return 0;
	}

	@Override
	public String toString() {
		return " metni: " + metni + " dogrucevabi " + siklari + "zorlugu " + zorlugu + "puani " + puani;
	}

	@Override
	protected void Sorukaristir() {

	}

}
